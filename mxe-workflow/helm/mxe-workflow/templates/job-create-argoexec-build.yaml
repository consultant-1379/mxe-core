{{- if .Values.global.security.tls.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include  "mxe.argoexec-build-job" . }}
  namespace: {{ .Release.Namespace | quote }}  
  labels:
    app.kubernetes.io/part-of: "mxe-workflow"
    app.kubernetes.io/component: "mxe-workflow"
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/name: {{ include "mxe.name" . | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    helm.sh/chart: {{ include "mxe.chart" . | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation
    {{- include "mxe.product-info" . | nindent 4 }}
spec:
  completions: 1
  parallelism: 1
  backoffLimit: 3
  template:
    metadata:
      annotations:
        {{- include "mxe.istio-sidecar-annotations" . | nindent 8 }}
        {{- include "mxe.product-info" . | nindent 8 }}
        {{- include "mxe.security-annotations" . | nindent 8 }}
      labels:
        {{- include "mxe.istio-sidecar-labels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ include  "mxe.argoexec-build-job" . }}
          image: "{{ include "mxe.image-repository" . }}{{ .Values.argoexecBuild.images.name }}:{{ .Values.argoexecBuild.images.tag }}"
          imagePullPolicy: {{ .Values.argoexecBuild.images.pullPolicy }}
          env:
            - name: DOCKER_REGISTRY_HOSTNAME
              value: {{ include "mxe.docker-registry-hostname" . | quote }}
            - name: WORK_DIR
              value: "/mnt/work"
            {{- include "mxe.argoexec-build-job.addinstallerdockerregistryca-env" . | nindent 12 }}
          volumeMounts:
          - name: work-dir
            mountPath: /mnt/work
          - name: trusted-ca
            mountPath: /mnt/trusted/ca
            readOnly: true
          - name: docker-file
            mountPath: /mnt/dockerfile
          - name: docker-registry-secret
            mountPath: /mnt/dockersecret
          {{- include "mxe.argoexec-build-job.addinstallerdockerregistryca-volume-mounts" . | nindent 10 }}
          securityContext:
            {{- include "mxe.argoexec-build-job-security-context" . | nindent 12 }}           
      restartPolicy: Never
      volumes:
      - name: work-dir
        emptyDir: {}
      - name: trusted-ca
        secret:
          secretName: eric-sec-sip-tls-trusted-root-cert
      - name: docker-registry-secret
        secret:
          secretName: {{ .Values.argoexecBuild.mergedDockerConfigSecretName | quote }}
      - name: docker-file
        configMap:
          name: {{ include "mxe.docker-configmap" . | quote }}
      {{- include "mxe.argoexec-build-job.addinstallerdockerregistryca-volumes" . | nindent 6 }}     
      {{- include "mxe.argoexec-build.image-pull-secrets" . | nindent 6 }}
{{- end }}