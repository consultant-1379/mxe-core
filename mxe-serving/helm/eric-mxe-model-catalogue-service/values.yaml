# Default values for eric-mxe-model-catalogue-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# Modified class to ingressClass to handle DR-D1125-013
ingress:
  enabled: true
  hostname: null
  secretName: null
  ingressClass: eric-mxe-ingress-controller-class
  annotationPrefix: null
  defaultBackendFullNameOverride: null
  defaultBackendNameOverride: null
  owasp:
    enabled: true

minio:
  http:
    url: http://eric-data-object-storage-mn:9000
  https:
    url: https://eric-data-object-storage-mn:9000
  adminSecretName: eric-data-object-storage-mn-secret
  userModelSourceServiceSecretName:
  userModelSourceInstanceSecretName:
  modelsource:
    service:
      secretkey:
    instance:
      secretkey:

nameOverride: null

isExtCA: false

modelService:
  # hostOverride:
  port: http

authorService:
  # hostOverride:
  port: http

dockerRegistry:
  ingressEnabled: true
  nameOverride:
  fullHostOverride:
  portOverride:
# secretNameOverride is used so that a consolidated pull secret containing credentials to access
# mxe's internal image registry, and the source registry that contains images that are 
# meant to be used by workloads in mxe can be used
  secretNameOverride: mxe-pull-secret
  externalHostname:
  externalPort: 32222

installerDockerRegistry:
  caSecretName:

docker:
  nameOverride:
  fullHostOverride:
  portOverride:

service:
  type: ClusterIP
  port: 8080
  metrics: 8081

database:
  create: true
  # nameOverride: 
  serviceName: "eric-data-document-database-pg"
  portName: "postgresql"
  superUserSecretName: "mxe-db-password"
  superUserIdKey: "super-user"
  superUserPwdKey: "super-pwd"
  connectionDb:
  customUserSecretFullNameOverride:
  createCustomUserSecret: true
  customUserIdKey: "user"
  customUserPwdKey: "password"
  customUserPwd:

resources:
  modelService:
    requests:
      cpu: 100m
      memory: 1Gi
      ephemeral-storage: 50Mi
    limits:
      cpu: 300m
      memory: 2Gi
      ephemeral-storage: 100Mi
  kubernetesModifier:
    limits:
      cpu: 50m
      ephemeral-storage: 50Mi
      memory: 100Mi
    requests:
      cpu: 50m
      ephemeral-storage: 50Mi
      memory: 100Mi
  initCacerts:
    limits:
      cpu: 50m
      ephemeral-storage: 50Mi
      memory: 100Mi
    requests:
      cpu: 50m
      ephemeral-storage: 50Mi
      memory: 100Mi
  certificateSidecarService:
    limits:
      cpu: 100m
      ephemeral-storage: 100Mi
      memory: 200Mi
    requests:
      cpu: 100m
      ephemeral-storage: 50Mi
      memory: 200Mi
  dbInit:
    limits:
      cpu: 50m
      ephemeral-storage: 50Mi
      memory: 100Mi
    requests:
      cpu: 50m
      ephemeral-storage: 50Mi
      memory: 100Mi
  minioCli:
    limits:
      cpu: 50m
      ephemeral-storage: 50Mi
      memory: 100Mi
    requests:
      cpu: 50m
      ephemeral-storage: 50Mi
      memory: 100Mi

nodeSelector: {}

tolerations: []

topologySpreadConstraints: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchExpressions:
              - key: "app.kubernetes.io/part-of"
                operator: "In"
                values:
                  - "mxe"
              - key: "app.kubernetes.io/component"
                operator: "In"
                values:
                  - "model-catalogue-service"
              - key: "app.kubernetes.io/instance"
                operator: "In"
                values:
                  - "{{ .Release.Name }}"

imageCredentials:
  pullSecret:
  registry:
    url:
    pullSecret:
  repoPath:
  modelService:
    registry:
      url:
      pullSecret:
      imagePullPolicy:
    repoPath:
  dbInit:
    registry:
      url:
      pullSecret:
      imagePullPolicy:
    repoPath:
  packager:
    registry:
      url:
      pullSecret:
      imagePullPolicy:
    repoPath:
  kubernetes-modifier:
    registry:
      url:
      pullSecret:
      imagePullPolicy:
    repoPath:
  modelBase:
    registry:
      url:
      pullSecret:
      imagePullPolicy:
    repoPath:
  minio-cli:
    repoPath:
    registry:
      url:
      pullSecret:
      imagePullPolicy:
productInfo:
  # R-State of the product. R State should match helm chart version (3.1.0 -> R2A)
  # To automate it when packaging the helm chart rstate can be generated
  # and below value replaced with correct R-State
  rstate: "-"

images:
  modelService:
    name: "mxe/eric-mxe-model-catalogue-service"
    tag: "VERSION"
  dbInit:
    name: "mxe/eric-mxe-db-init"
    tag: "VERSION"
  packager:
    name: "mxe/eric-mxe-model-packager"
    tag: "VERSION"
  kubernetes-modifier:
    name: "mxe/eric-mxe-kubernetes-modifier"
    tag: "VERSION"
  minio-cli:
    name: "minio/mc"
    tag: "RELEASE.2024-04-18T16-45-29Z-ubuntu-20240405"
  modelBase:
    name: "mxe/eric-mxe-model-python-base"
    tag: "VERSION"
  certificate-sidecar:
    name: "certificate-sidecar"
    tag: "ubuntu-20240405"
    pullPolicy: IfNotPresent

updateStrategy:
  type: "RollingUpdate"
  rollingUpdate:
    maxUnavailable: 25%
    maxSurge: 25% 

keycloak:
  statefulset:
    name: eric-sec-access-mgmt


# DR-D1121-011 - Present in Top Level Helm Chart Values.yaml
#global:
#  pullSecret:
#  registry:
#    url: "armdocker.rnd.ericsson.se"
#    pullSecret:
#  mxeApiTlsSecretName:
#  mxeApiHostname:
#  mxeIamCaSecretName: iam-ca-cert
#  mxeDisableDefaultIngressControllerUse: false
#  mxeClusterDomain: cluster.local
#  internalRegistry:
#    username: admin
#    password: ""
#  fsGroup:
#    manual:
#  labels: {}
#  annotations: {}

pypiServer:
  internal: eric-mxe-pypiserver:8080/simple
  external: pypi.org/simple

#Added to handle DR_D1120_012 & DR_D1120_014 & DR_D1120_080

probes:
  modelCatalogueService:
    livenessProbe:
      initialDelaySeconds: 20
      periodSeconds: 30
      failureThreshold: 5
      timeoutSeconds: 5
    readinessProbe:
      initialDelaySeconds: 60
      periodSeconds: 30
      failureThreshold: 5
      timeoutSeconds: 5
      successThreshold: 1

#Added to handle DR_D1120_080
terminationGracePeriodSeconds: 30

podPriority:
  modelCatalogueService:
    priorityClassName: 

# Added to handle DR-D1121-068
labels: {}
annotations: {}

serviceMesh:
  enabled: true
  tlsMode: ISTIO_MUTUAL

# DR-D1123-127 -  ADP services shall define AppArmor profile
appArmorProfile:
  type:
  localhostProfile:

# DR-D1123-128 - ADP services shall define seccomp profile
seccompProfile:
  type: RuntimeDefault
  localhostProfile: