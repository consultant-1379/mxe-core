{{- $global := fromJson (include "eric-mxe-author-service.global" .) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "eric-mxe-author-service.name" . }}
  labels:
    {{- $component := printf "%s" "app.kubernetes.io/component: author-service"  | fromYaml -}}
    {{- $name := printf "%s: %s" "app.kubernetes.io/name" (include "eric-mxe-author-service.name" .)  | fromYaml -}}
    {{- $authSrvLabels := include "eric-mxe-author-service.labels" . | fromYaml -}}
    {{- include "eric-mxe-author-service.mergeLabels" (dict "location" .Template.Name "sources" (list $name $component $authSrvLabels )) | trim | nindent 4 }}
  annotations:
    {{- include "eric-mxe-author-service.annotations" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/part-of: "mxe"
      app.kubernetes.io/component: "author-service"
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
  {{- include "eric-mxe-author-service.update-strategy" . | nindent 2 }}
  template:
    metadata:
      labels:
        {{- $component := printf "%s" "app.kubernetes.io/component: author-service"  | fromYaml -}}
        {{- $name := printf "%s: %s" "app.kubernetes.io/name" (include "eric-mxe-author-service.name" .)  | fromYaml -}}
        {{- $istioLabels := include "eric-mxe-author-service.istio-sidecar-labels" . | fromYaml -}}
        {{- $authSrvLabels := include "eric-mxe-author-service.labels" . | fromYaml -}}
        {{- include "eric-mxe-author-service.mergeLabels" (dict "location" .Template.Name "sources" (list $name $component $istioLabels $authSrvLabels )) | trim | nindent 8 }}
      annotations:
        {{- $authSrvAnn := include "eric-mxe-author-service.annotations" . | fromYaml -}}
        {{- $istioAnn := include "eric-mxe-author-service.istio-sidecar-annotations" . | fromYaml -}}
        {{- $productInfoAnn := include "eric-mxe-author-service.product-info" . | fromYaml -}}
        {{- $prometheusAnn := include "eric-mxe-author-service.prometheus-annotations" . | fromYaml -}}
        {{- $securityAnn := include "eric-mxe-author-service.security-annotations" . | fromYaml -}}
        {{- include "eric-mxe-author-service.mergeAnnotations" (dict "location" .Template.Name "sources" (list $authSrvAnn $istioAnn $productInfoAnn $prometheusAnn $securityAnn)) | trim | nindent 8 }}
    spec:
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "eric-mxe-author-service.topologySpreadConstraints" . | trim | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "eric-mxe-author-service.serviceaccount" . | quote }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- if include "eric-mxe-author-service.podPriority" . }}
      priorityClassName: {{- include "eric-mxe-author-service.podPriority" . | indent 2 }}
      {{- end }}
      initContainers:
        - name: init-cacerts
# Since CBO image does not include java-certs or jdk, author-service image is being pulled in for a copy of system wide java-certs.
          {{- with .Values.imageCredentials.authorService }}
          image: "{{ include "eric-mxe-author-service.setImageRepo" (list $ .registry.url .repoPath "authorService") }}{{ $.Values.images.authorService.name }}:{{ $.Values.images.authorService.tag }}"
          {{- end }}
          imagePullPolicy: {{ include "eric-mxe-author-service.registryImagePullPolicy" (list . .Values.imageCredentials.authorService.registry.imagePullPolicy) }}
          {{- include "eric-mxe-author-service.usercontainer-security-context" . | nindent 10 }}
          command:
          - bash
          - -c
          - |
            cp /var/lib/ca-certificates/java-cacerts /cacerts/
            chmod u+w /cacerts/java-cacerts
            keytool -noprompt -importcert -alias startssl -keystore /cacerts/java-cacerts -storepass changeit -file /run/secrets/iam-ca-cert/ca.crt
          {{- include "eric-mxe-author-service.init-certs-mtls" . | nindent 12 }}
          resources:
            {{- toYaml .Values.resources.initCacerts | trim | nindent 12 }}
          volumeMounts:
          - name: cacerts
            mountPath: /cacerts
          - name: iam-ca-cert
            mountPath: /run/secrets/iam-ca-cert
          - name: tmp
            mountPath: /tmp
          {{- include "eric-mxe-author-service.init-certs-mtls-volume-mounts" . | nindent 10 }}
        - name: {{ printf "%s-%s" .Chart.Name "kubectl" | trunc 63 | trimSuffix "-" }}
          {{- with (index .Values "imageCredentials" "kubernetes-modifier") }}
          image: "{{ include "eric-mxe-author-service.setImageRepo" (list $ .registry.url .repoPath "kubernetes-modifier") }}{{ index $.Values "images" "kubernetes-modifier" "name" }}:{{ index $.Values "images" "kubernetes-modifier" "tag" }}"
          {{- end }}
          imagePullPolicy: {{ include "eric-mxe-author-service.registryImagePullPolicy" (list . (index .Values "imageCredentials" "kubernetes-modifier" "registry" "imagePullPolicy")) }}
          {{- include "eric-mxe-author-service.kubectl-security-context" . | nindent 10 }}
          env:
            - name: KEYCLOAK_STATEFULSET_NAME
              value: {{ .Values.keycloak.statefulset.name | quote }}
            - name: KEYCLOAK_STATEFULSET_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            {{- toYaml .Values.resources.kubernetesModifier | trim | nindent 12 }}
          volumeMounts:
            - mountPath: "/etc/kubernetes-run-script/"
              name: wait-for-keycloak-script
        {{ if .Values.database.create -}}
        - name: {{ printf "%s-%s" .Chart.Name "init-db" | trunc 63 | trimSuffix "-" }}
          {{- with .Values.imageCredentials.dbInit }}
          image: "{{ include "eric-mxe-author-service.setImageRepo" (list $ .registry.url .repoPath "dbInit") }}{{ $.Values.images.dbInit.name }}:{{ $.Values.images.dbInit.tag }}"
          {{- end }}
          imagePullPolicy: {{ include "eric-mxe-author-service.registryImagePullPolicy" (list . .Values.imageCredentials.dbInit.registry.imagePullPolicy) }}
          {{- include "eric-mxe-author-service.initdb-security-context" . | nindent 10 }}
          env:
            - name: POSTGRESQL_SERVICE
              value: {{ .Values.database.serviceName | trunc 63 | trimSuffix "-" }}
            - name: POSTGRESQL_PORT_NAME
              value: {{ .Values.database.portName }}
            - name: POSTGRESQL_SUPERUSER_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.superUserSecretName }}
                  key: {{ .Values.database.superUserIdKey }}
            - name: POSTGRESQL_SUPERUSER_PWD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.superUserSecretName }}
                  key: {{ .Values.database.superUserPwdKey }}
            - name: POSTGRESQL_CREATEDUSER_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "eric-mxe-author-service.db-custom-user-secret-name" . }}
                  key: {{ .Values.database.customUserIdKey }}
            - name: POSTGRESQL_CREATEDUSER_PWD
              valueFrom:
                secretKeyRef:
                  name: {{ include "eric-mxe-author-service.db-custom-user-secret-name" . }}
                  key: {{ .Values.database.customUserPwdKey }}
            - name: POSTGRESQL_DB
              value: {{ include "eric-mxe-author-service.db-name" . }}
            {{- include "eric-mxe-author-service.db-init-env" . | nindent 12 -}}
          {{- include "eric-mxe-author-service.db-init-args-command" . | nindent 10 -}}
          {{- include "eric-mxe-author-service.db-init-volume-mounts" . | nindent 10 }}
          resources:
            {{- toYaml .Values.resources.dbInit | trim | nindent 12 }}
        {{ end }}
      containers:
        {{ if .Values.global.serviceMesh.enabled -}}
        - name: {{ printf "%s-%s" .Chart.Name "certificate-sidecar" | trunc 63 | trimSuffix "-" }}
          {{- with (index .Values "imageCredentials" "kubernetes-modifier") }}
          image: "{{ include "eric-mxe-author-service.setImageRepo" (list $ .registry.url .repoPath "kubernetes-modifier") }}{{ index $.Values "images" "kubernetes-modifier" "name" }}:{{ index $.Values "images" "kubernetes-modifier" "tag" }}"
          {{- end }}
          imagePullPolicy: {{ include "eric-mxe-author-service.registryImagePullPolicy" (list . (index .Values "imageCredentials" "kubernetes-modifier" "registry" "imagePullPolicy")) }}
          env:
            - name: SOURCE
              value: {{ include "eric-mxe-author-service.certificate-sidecar-source" . }}
            - name: DESTINATION
              value: {{ include "eric-mxe-author-service.certificate-sidecar-destination" . }}
            - name: RUN_COMMAND
              value: {{ include "eric-mxe-author-service.certificate-sidecar-run-command" . }}
          resources:
            {{- toYaml .Values.resources.certificateSidecarService | trim | nindent 12 }}
          volumeMounts:
            - name: kubernetes-run-script
              mountPath: /etc/kubernetes-run-script
              readOnly: true
            - name: tmp
              mountPath: /tmp
            {{- include "eric-mxe-author-service.service-mesh-volume-mounts" . | nindent 12 }}
          {{- include "eric-mxe-author-service.usercontainer-security-context" . | nindent 10 }}
        {{ end }}
        - name: {{ .Chart.Name | quote }}
          {{- with .Values.imageCredentials.authorService }}
          image: "{{ include "eric-mxe-author-service.setImageRepo" (list $ .registry.url .repoPath "authorService") }}{{ $.Values.images.authorService.name }}:{{ $.Values.images.authorService.tag }}"
          {{- end }}
          imagePullPolicy: {{ include "eric-mxe-author-service.registryImagePullPolicy" (list . .Values.imageCredentials.authorService.registry.imagePullPolicy) }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: mgmt
              containerPort: 8081
              protocol: TCP
          env:
            - name: POSTGRESQL_SERVICE
              value: {{ .Values.database.serviceName | trunc 63 | trimSuffix "-" }}
            - name: POSTGRESQL_PORT
              value: {{ .Values.database.portName }}
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "eric-mxe-author-service.db-custom-user-secret-name" . }}
                  key: {{ .Values.database.customUserIdKey }}
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "eric-mxe-author-service.db-custom-user-secret-name" . }}
                  key: {{ .Values.database.customUserPwdKey }}
            - name: POSTGRESQL_DB
              value: {{ include "eric-mxe-author-service.db-name" . }}
            - name: DOCKER_REGISTRY_HOSTNAME
              value: {{ include "eric-mxe-author-service.docker-registry-hostname" . | quote }}
            - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI
              value: "{{ include "eric-mxe-author-service.oauth-api-host-path-url" . }}/auth/realms/mxe/protocol/openid-connect/certs"
            - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI
              value: "{{ include "eric-mxe-author-service.oauth-api-host-path-url" . }}/auth/realms/mxe"
            - name: SERVICE_MESH_MTLS_ENABLED
              value: {{ .Values.global.serviceMesh.enabled | quote }}
            - name: JDBC_PARAMS
              value: {{ include "eric-mxe-author-service.jdbc-params" . | quote }}
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: mgmt
            initialDelaySeconds: {{ .Values.probes.mxeAuthorService.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.mxeAuthorService.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.probes.mxeAuthorService.livenessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.probes.mxeAuthorService.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: mgmt
            initialDelaySeconds: {{ .Values.probes.mxeAuthorService.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.mxeAuthorService.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.probes.mxeAuthorService.readinessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.probes.mxeAuthorService.readinessProbe.timeoutSeconds }}
          resources:
            {{- toYaml .Values.resources.authorService | trim | nindent 12 -}}
          {{- include "eric-mxe-author-service.usercontainer-security-context" . | nindent 10 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cacerts
              mountPath: /var/lib/ca-certificates
            - name: log-control
              mountPath: /app/config/logcontrol
            - name: iam-ca-cert
              mountPath: /run/secrets/iam-ca-cert
            {{- include "eric-mxe-author-service.service-mesh-volume-mounts" . | nindent 12 }}
      volumes:
        - name: log-control
          configMap:
            name: {{ include "eric-mxe-author-service.log-control-configmap" . | quote }}
        - name: tmp
          emptyDir: {}
        - name: cacerts
          emptyDir:
            sizeLimit: 512Ki
        - name: wait-for-keycloak-script
          configMap:
            name: {{ include "eric-mxe-author-service.wait-for-keycloak-configmap" . | quote }}
        - name: iam-ca-cert
          secret:
            secretName: {{ include "eric-mxe-author-service.iam-ca-cert-name" . | quote }}
        {{- include "eric-mxe-author-service.service-mesh-volumes" . | nindent 8 }}
      {{- include "eric-mxe-author-service.image-pull-secrets" . | nindent 6 }}
      {{- if (or .Values.nodeSelector $global.nodeSelector) }}
      nodeSelector: {{- include "eric-mxe-author-service.nodeSelector" . | nindent 8 }}
      {{- end }}
      affinity:
        {{- tpl (toYaml .Values.affinity) . | nindent 8 }}
      tolerations: {{ include "eric-mxe-author-service.merge-tolerations" (dict "root" . "podbasename" "eric-mxe-author-service") | nindent 8}}       

