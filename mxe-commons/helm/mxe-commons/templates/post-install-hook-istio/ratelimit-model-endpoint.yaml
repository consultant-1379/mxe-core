{{- if .Values.config.ratelimit.enabled -}}
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: {{ include "mxe-commons.ratelimit-envoyfilter-name" . | quote }}
  namespace:  {{ .Release.Namespace | quote }}
  annotations:
    "helm.sh/hook": "post-install"
    "helm.sh/hook-weight": "8"
    "helm.sh/hook-delete-policy": "before-hook-creation"  
spec:
  workloadSelector:
    labels:
      app.kubernetes.io/name: eric-mxe-ingress-controller
      app.kubernetes.io/part-of: mxe
  configPatches:
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_INBOUND
        listener:
          filterChain:
            filter:
              name: "envoy.filters.network.http_connection_manager"
      patch:
        operation: INSERT_BEFORE
        value:
          name: envoy.filters.http.local_ratelimit
          typed_config:
            "@type": type.googleapis.com/udpa.type.v1.TypedStruct
            type_url: type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
            value:
              stat_prefix: mxe
              token_bucket:
                max_tokens: 2000000
                tokens_per_fill: 2000000
                fill_interval: 60s
              filter_enabled:
                runtime_key: local_rate_limit_enabled
                default_value:
                  numerator: 100
                  denominator: HUNDRED
              filter_enforced:
                runtime_key: local_rate_limit_enforced
                default_value:
                  numerator: 100
                  denominator: HUNDRED
              response_headers_to_add:
                - append: false
                  header:
                    key: x-local-rate-limit
                    value: 'true'
              descriptors:
                - entries:
                  - key: header_match
                    value: pattern_match
                  token_bucket:
                    max_tokens: 6000
                    tokens_per_fill: 6000
                    fill_interval: 60s
    - applyTo: HTTP_ROUTE
      match:
        context: SIDECAR_INBOUND
        routeConfiguration:
          vhost:
            route:
              action: ROUTE
      patch:
        operation: MERGE
        value:
          route:
            rateLimits:
            - actions:
              - header_value_match:
                  descriptor_value: "pattern_match"
                  expect_match: true
                  headers:
                    - name: ":path"
                      prefix_match: /model-endpoints/
{{ end }}
