# Default values for mxe.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# DR-D1121-011 - Includes global vales of sub-charts
global:
  pullSecret:
  registry:
    url:
    pullSecret:
    imagePullPolicy: IfNotPresent
    repoPath:
  mxeApiTlsSecretName:
  mxeOauthApiTlsSecretName:
  mxeApiHostname:
  mxeApiport:
  mxeOauthApiHostname:
  mxeIamCaSecretName: iam-ca-cert
  mxeDisableDefaultIngressControllerUse: false
  mxeClusterDomain: cluster.local
  mxeLogControlConfigMap: mxe-commons-log-control-configmap
  mxePrometheusPath: /actuator/prometheus
  mxePrometheusPort: '8081'
  mxePrometheusScrape: 'true'
  mxePrometheusScrapeRole: pod 
  mxePrometheusScrapeInterval: 15s
  nodeSelector: {}
  labels: {}
  annotations: {}
  security:
    tls:
      enabled: false
  fsGroup:
    manual: 10000
    namespace: false
  mtls:
    auto:
  multiTenancy:
    enabled:
  meshConfig:
    accessLogFile:
  internalRegistry:
    username: admin
    password: ""
  internalIPFamily:
  mxeGiteaApiHostname: 
  mxeDeployerApiHostname:
  mxeArgoCDApiHostname: 
  serviceMesh:
    enabled: true
    annotations:
      serviceMesh:
    egress: 
      ca:
        secretName: egress-ca-secret
        caCertsPath: /etc/istio/egress-ca-certs/
        caCertificates: ca.crt
        genSecretName: eric-sec-sip-tls-trusted-root-cert
        readonly: true
      lcmRegistry:
        enabled: true
        serviceName: eric-lcm-container-registry-registry
        secretName: egress-lcm-secret
        certsPath: /etc/istio/lcm/egress-certs/
        genSecretName: eric-lcm-container-registry-client-cert
        clientCertificate: clicert.pem
        privateKey: cliprivkey.pem
        optional: true
        readonly: true
        tlsMode: MUTUAL
      iam:
        enabled: true
        serviceName: eric-sec-access-mgmt-http
        secretName: egress-secret
        certsPath: /etc/istio/egress-certs/
        genSecretName: eric-sec-access-mgmt-iam-int-client-cert
        clientCertificate: clicert.pem
        privateKey: cliprivkey.pem
        optional: true
        readonly: true
        tlsMode: MUTUAL
        certificateCN: adp-iam-aa-client
        caIssuer: eric-sec-access-mgmt-iam-client-ca
      pmServer:
        enabled: true
        serviceName: eric-pm-server
        caIssuer: eric-pm-server-query-ca
        secretName: egress-pm-secret
        certsPath: /etc/istio/pm/egress-certs/
        genSecretName: eric-pm-server-query-cert
        clientCertificate: clicert.pem
        privateKey: cliprivkey.pem
        optional: true
        readonly: true
      postgres:
        serviceName: eric-data-document-database-pg
        caIssuer: eric-data-document-database-pg-client-ca
        clientCertificate: clicert.pem
        privateKey: cliprivkey.pem
  # Non Operator based deployment is no longer supported by MXE
  documentDatabasePG:
    operator:
      enabled: true

config:
  pg:
    custom:
      password:
  object_storage_admin:
    accesskey:
    secretkey:
  ratelimit:
    enabled: false

dockerRegistry:
  ingressEnabled: true
  nameOverride:
  fullHostOverride:
  portOverride: 

productInfo:
# R-State of the product. R State should match helm chart version (3.1.0 -> R2A)
# To automate it when packaging the helm chart rstate can be generated
# and below value replaced with correct R-State
  rstate:
  
secret:
  registry:
    nameOverride:
  database:
    nameOverride:
  object-storage:
    nameOverride:

eric-data-document-database-pg:
  enabled: true
  global:
    adpBR:
      broServiceName:
      broGrpcServicePort:
      brLabelKey:
    security:
      tls:
        enabled: false
  credentials:
    kubernetesSecretName: "mxe-db-password"
  affinity:
    podAntiAffinity: soft
  brAgent:
    enabled:
    logicalDBBackupEnable: false
    backupDataModelConfig: eric-data-document-database-pg-bro-backup
    backupTypeList:
    - "DEFAULT"
    - "mxe-pg"

documentDatabasePG:
  customObject:
    enabled: true
    instanceName: "eric-data-document-database-pg"
    replicaCount: 2
    logLevel: info
    backupRestore:
      enabled: true
      backupType: "mxe-pg"
    databaseServerConfig:
      authentication:
        # This value overrides the settings provided by "global.security.tls.enabled" flag
        # Currently, if the flag is set to true, mode will be mTLSonly. If false, mode will be password
        # If support for both is required, override this flag to mTLSoptional
        mode:
        passwordsSecretReference: mxe-db-password
      settings:
    resources:
      flavor: typical
      persistentStorage:
        housekeepingThresholdPercentage:
        documentDatabasePGVolume:
          persistentVolumeClaim:
            size: 8Gi
            storageClassName:

eric-lcm-container-registry:
  enabled: true
  global:
    adpBR:
      broServiceName:
      broGrpcServicePort:
      brLabelKey:
    security:
      tls:
        enabled: false
  registry:
    users:
      secret: mxe-docker-registry-secret
  ingress:
    enabled: false
  brAgent:
    enabled:
    backupTypeList:
      - "DEFAULT"
      - "mxe-lcm"

internal-container-registry:
  nameOverride:
  ingress:
    service:
      name: eric-lcm-container-registry
      port: 5000
    metrics:
      enabled: true
      service:
        name: eric-lcm-container-registry
        port: 5001
    tls:
      enabled: false
    controller: eric-mxe-ingress-controller-class
    ingressClass: eric-mxe-ingress-controller-class
    useHttpProxy: false
    annotations:
      ingress.kubernetes.io/body-size: "0"
      ingress.kubernetes.io/ssl-redirect: "true"
      mxe.nginx.ingress.kubernetes.io/ssl-redirect: "false"
      mxe.nginx.ingress.kubernetes.io/body-size: "0"
      mxe.nginx.ingress.kubernetes.io/proxy-body-size: "0"
      mxe.nginx.ingress.kubernetes.io/default-backend: eric-mxe-default-backend
      mxe.nginx.ingress.kubernetes.io/service-upstream: "true"
      mxe.nginx.ingress.kubernetes.io/upstream-vhost: eric-lcm-container-registry-registry
  brAgent:
    enabled:
    backupTypeList:
      - "DEFAULT"
      - "mxe-lcm"

eric-sec-access-mgmt:
  statefulset:
    additionalEnv:
      - name: "PROXY_ADDRESS_FORWARDING"
        value: "true"
    adminSecret: eric-mxe-gatekeeper-keycloak-access-creds-hooked
    podAntiAffinity: "soft"
  enabled: true
  ingress:
    enabled: false
  service:
    annotations:
      addressPoolName: ""
      sharedVIPLabel: ""
    tls:
      enabled: false
  persistence:
    tls:
      enabled: false
    dbsecret: eric-mxe-gatekeeper-keycloak-access-creds-hooked
    dbHost: eric-data-document-database-pg
  tls:
    client:
      ldap:
        enabled: false
      pg:
        enabled: false
        subject: "eric-mxe-keycloak"
        issuer: eric-data-document-database-pg-client-ca

  imageCredentials:
    iam:
      repoPath: "REPO_PATH/mxe"
  registry:
    imagePullPolicy: Always
  # Setting this key to null fixes the current IAM Helm chart for using it with helm3,
  # to be deleted after upgrade to latest PRA:
  updateStrategy:
    rollingUpdate: ""
  #Comma-separated list of values to be considered valid for the HTTP Host header in requests passed to IAM. 
  #The ingress hostname and IAM's service name are considered valid by default. 
  #Use this parameter to set additional valid Host headers.
  http:
    hostValidation:
      allowedHosts:

  documentDatabasePG:
    customObject:
      enabled: false
      instanceName: eric-data-document-database-pg

eric-pm-server:
  enabled: true
  server:
    extraArgs:
      "web.route-prefix": "/"
      "storage.tsdb.retention.time": "7d"
      "storage.tsdb.retention.size": "4096MB"
    persistentVolume:
      enabled: true
    configMapOverrideName: "eric-mxe-prometheus-config-map"
    serviceAccountName: "eric-mxe-prometheus-service-account"
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchExpressions:
                  - key: "app.kubernetes.io/name"
                    operator: "In"
                    values:
                      - "eric-pm-server"
    podAnnotations:
      mxe.nginx.ingress.kubernetes.io/service-upstream: "true"
      mxe.nginx.ingress.kubernetes.io/upstream-vhost: eric-pm-server
  rbac:
    appMonitoring:
      enabled: false

eric-mesh-ingressgateway:
  enabled: true
  nameOverride: eric-mesh-ingressgateway
  replicaCount: 2
  autoScaling:
    minReplicas: 2
    maxReplicas: 3
  service:
    type: ClusterIP

eric-mxe-gatekeeper:
  resources:
    gatekeeper:
      limits:
        cpu: 1000m
        ephemeral-storage: 500Mi
        memory: 2Gi
      requests:
        cpu: 500m
        ephemeral-storage: 100Mi
        memory: 256Mi
    realmUpdaterJob:
      limits:
        cpu: 100m
        ephemeral-storage: 50Mi
        memory: 200Mi
      requests:
        cpu: 100m
        ephemeral-storage: 50Mi
        memory: 200Mi
    dbInit:
      limits:
        cpu: 50m
        ephemeral-storage: 50Mi
        memory: 100Mi
      requests:
        cpu: 50m
        ephemeral-storage: 50Mi
        memory: 100Mi
    kubernetesModifier:
      limits:
        cpu: 50m
        ephemeral-storage: 50Mi
        memory: 100Mi
      requests:
        cpu: 50m
        ephemeral-storage: 50Mi
        memory: 100Mi
    keycloakInit:
      limits:
        cpu: 100m
        ephemeral-storage: 50Mi
        memory: 200Mi
      requests:
        cpu: 100m
        ephemeral-storage: 50Mi
        memory: 200Mi

eric-mxe-gui:
  legalWarningMessage: |-
    *Log-on is only allowed for authorized users. If you are not an authorized user, please exit.
    In accordance with requirements of data protection laws, we hereby inform you that personally identifiable information will be handled in log files for legal, security and costs reasons.
    This system processes sensitive personal data. The misuse of such data may generate considerable harm to the data subjects. Be reminded of the confidentiality obligations you have when accessing this kind of data and the disciplinary consequences of improper handling.
  resources:
    gui:
      requests:
        cpu: 500m
        ephemeral-storage: 100Mi
        memory: 1Gi
      limits:
        cpu: 1000m
        ephemeral-storage: 500Mi
        memory: 2Gi

eric-data-object-storage-mn:
  enabled: true
  global:
    serviceNames:
      ctrl:
        bro:
    servicePorts:
      ctrl:
        bro:
    security:
      tls:
        enabled: false
  imageCredentials:
    osmn:
      registry:
        url:
    init:
      registry:
        url:
    bra:
      registry:
        url:
    kes:
      registry:
        url:
    logshipper:
      registry:
        url:
    hookjob:
      registry:
        url:
  autoEncryption:
    enabled: true
    kmsConfigSecret: eric-data-object-storage-mn-kms-set
  keyManagement:
    tokenSecretName: eric-sec-key-management-root-token
    tokenKey: token
    hostname: eric-sec-key-management
    serviceAccountNameForCredentials: eric-sec-key-management-admin
    port: 8200
    # Root CA for connecting to KMS by HTTPS
    tls:
      caSecret: "eric-sec-sip-tls-trusted-root-cert"
      caCert: "cacertbundle.pem"
  credentials:
    kubernetesSecretName: "eric-data-object-storage-mn-secret"
  affinity:
    podAntiAffinity: soft
  metadata:
    annotations:
      sidecar.istio.io/rewriteAppHTTPProbers: "false"
    labels:
      sidecar.istio.io/inject: "false"
  brAgent:
    enabled:
    brLabelKey:
    brLabelValue: "ObjectStorageBRAgent"
    backupTypeList:
      - "DEFAULT"
      - "mxe-mn"
    properties:
      backup_data_path: mxe-argo-artifacts,mxe-models-bucket,mxe-trainjr-bucket,mxe-trainp-bucket

eric-mesh-controller:
  enabled: true
  pilot:
    jwksResolverExtraRootCA: |
      -----BEGIN CERTIFICATE-----
      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
      tRq4ImVO9Ddg1VngqJRZvro+zlH3pQ==
      -----END CERTIFICATE-----

mxePostInstallHookIstio:
  nameOverride:
  image:
    name: "mxe/eric-mxe-kubernetes-modifier"
    tag: "VERSION"
    pullPolicy: 
    repoPath: "REPO_PATH"

mxePostInstallPullSecret:
  nameOverride:
  image:
    name: "mxe/eric-mxe-kubernetes-modifier"
    tag: "VERSION"
    pullPolicy:
    repoPath: "REPO_PATH"
  mergedDockerConfigSecretName: mxe-pull-secret


mxePostInstallHookIstioAuthzDenyOuthAdmin:
  nameOverride:
  
imageCredentials:
  registry:
    url:
    pullSecret:
  repoPath:

keycloak:
  service:
    name: eric-sec-access-mgmt-http
    httpPort: 8080
    httpsPort: 8443
  ingress:
    class: eric-mxe-ingress-controller-class
    clusterWideIngressClass: null
    auth:
      nameOverride:
      path: /auth
      annotations:
        mxe.nginx.ingress.kubernetes.io/service-upstream: "true"
        nginx.ingress.kubernetes.io/configuration-snippet: |
          proxy_set_header X-Forwarded-For "$remote_addr";
    oauth:
      nameOverride:
      default:
        nameOverride:

ingressController:
  hostOverride:
  service:
    name: eric-mxe-ingress-controller
    httpPort: 80
    httpsPort: 443


eric-mxe-pypiserver:
  resources:
    pypiserver:
      requests:
        cpu: 50m
        memory: 256Mi
        ephemeral-storage: 25Mi
      limits:
        cpu: 500m
        memory: 1Gi
        ephemeral-storage: 256Mi

eric-mxe-upgrade-jobs:
  resources:
    kubernetesModifier:
      limits:
        cpu: 50m
        ephemeral-storage: 50Mi
        memory: 100Mi
      requests:
        cpu: 50m
        ephemeral-storage: 50Mi
        memory: 100Mi

eric-mxe-author-service:
  resources:
    authorService:
      limits:
        cpu: 400m
        ephemeral-storage: 100Mi
        memory: 1Gi
      requests:
        cpu: 100m
        ephemeral-storage: 50Mi
        memory: 256Mi
    initCacerts:
      limits:
        cpu: 50m
        ephemeral-storage: 50Mi
        memory: 100Mi
      requests:
        cpu: 50m
        ephemeral-storage: 50Mi
        memory: 100Mi
    kubernetesModifier:
      limits:
        cpu: 50m
        ephemeral-storage: 50Mi
        memory: 100Mi
      requests:
        cpu: 50m
        ephemeral-storage: 50Mi
        memory: 100Mi
    dbInit:
      limits:
        cpu: 50m
        ephemeral-storage: 50Mi
        memory: 100Mi
      requests:
        cpu: 50m
        ephemeral-storage: 50Mi
        memory: 100Mi

eric-mxe-ingress-controller:
  resources:
    ingressController:
      requests:
        cpu: 500m
        memory: 1Gi
        ephemeral-storage: 25Mi
      limits:
        cpu: 3000m
        memory: 6Gi
        ephemeral-storage: 500Mi

eric-mxe-default-backend:
  resources:
    defaultBackend:
      requests:
        cpu: 100m
        memory: 512Mi
        ephemeral-storage: 25Mi
      limits:
        cpu: 400m
        memory: 2Gi
        ephemeral-storage: 256Mi

terminationGracePeriodSeconds: 30

# DR-D1123-127 -  ADP services shall define AppArmor profile
appArmorProfile:
  type:
  localhostProfile:

# ADP services shall define Seccomp profile
seccompProfile:
  type: RuntimeDefault
  localhostProfile: