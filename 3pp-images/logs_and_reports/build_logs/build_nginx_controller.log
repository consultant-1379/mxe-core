+ set -e
++ pwd
+ CWD=/home/evatsiv/gitViews/mxe-core/3pp-images
+ case "$(uname -s)" in
++ uname -s
++ readlink -f /home/evatsiv/gitViews/mxe-core/3pp-images/nginx-controller/build_image.sh
+ SCRIPT=/home/evatsiv/gitViews/mxe-core/3pp-images/nginx-controller/build_image.sh
++ dirname /home/evatsiv/gitViews/mxe-core/3pp-images/nginx-controller/build_image.sh
+ BASEDIR=/home/evatsiv/gitViews/mxe-core/3pp-images/nginx-controller
++ dirname /home/evatsiv/gitViews/mxe-core/3pp-images/nginx-controller
+ MODULEROOT=/home/evatsiv/gitViews/mxe-core/3pp-images
+ source /home/evatsiv/gitViews/mxe-core/3pp-images/base_image.sh
++ export LATEST_DATE_TAG=20240405
++ LATEST_DATE_TAG=20240405
++ export BASE_IMAGE=armdockerhub.rnd.ericsson.se/ubuntu:jammy-20240405
++ BASE_IMAGE=armdockerhub.rnd.ericsson.se/ubuntu:jammy-20240405
++ export LATEST_ALPINE_TAG=3.19.1
++ LATEST_ALPINE_TAG=3.19.1
++ export PYTHON_ALPINE_TAG=3.12.3-alpine3.19
++ PYTHON_ALPINE_TAG=3.12.3-alpine3.19
++ export ARMDOCKER_PROXY=armdocker.rnd.ericsson.se/dockerhub-ericsson-remote
++ ARMDOCKER_PROXY=armdocker.rnd.ericsson.se/dockerhub-ericsson-remote
+ echo 'Latest Alpine tag is 3.19.1'
Latest Alpine tag is 3.19.1
+ ALPINE_OS_VERSION=3.19.1
+ ALPINE_BASE_IMAGE=alpine:3.19.1
+ ALPINE_BASE_IMAGE_ARMPROXY=armdocker.rnd.ericsson.se/dockerhub-ericsson-remote/alpine:3.19.1
+ REPO_URL=https://github.com/kubernetes/ingress-nginx.git
+ CONTROLLER_VERSION=controller-v1.8.1
+ REGISTRY=armdocker.rnd.ericsson.se/proj-mxe/k8s.gcr.io
+ REGISTRY_INTERNAL=armdocker.rnd.ericsson.se/proj-mxe-ci-internal/k8s.gcr.io
+ NGINX_REGISTRY=armdocker.rnd.ericsson.se/proj-mxe/k8s.gcr.io/ingress-nginx
+ ALPINE_VERSION_IN_SRC=3.18.2
+ SRC_ALPINE_BASE_IMAGE=alpine:3.18.2
+ BUILD_ID=mxe2.8
+ cleanup
+ [[ -d /home/evatsiv/gitViews/mxe-core/3pp-images/nginx-controller/ingress-nginx ]]
+ [[ -d /home/evatsiv/gitViews/mxe-core/3pp-images/nginx-controller/ingress-nginx/.modcache/ ]]
+ chmod -R 777 /home/evatsiv/gitViews/mxe-core/3pp-images/nginx-controller/ingress-nginx/.modcache/
+ rm -rf /home/evatsiv/gitViews/mxe-core/3pp-images/nginx-controller/ingress-nginx
+ git clone -b controller-v1.8.1 https://github.com/kubernetes/ingress-nginx.git /home/evatsiv/gitViews/mxe-core/3pp-images/nginx-controller/ingress-nginx
Cloning into '/home/evatsiv/gitViews/mxe-core/3pp-images/nginx-controller/ingress-nginx'...
Note: switching to 'ab99e23bba4404ab5fd036e15fb178014cca1a2f'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by switching back to a branch.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -c with the switch command. Example:

  git switch -c <new-branch-name>

Or undo this operation with:

  git switch -

Turn off this advice by setting config variable advice.detachedHead to false

+ sed -i s#alpine:3.18.2#armdocker.rnd.ericsson.se/dockerhub-ericsson-remote/alpine:3.19.1#g /home/evatsiv/gitViews/mxe-core/3pp-images/nginx-controller/ingress-nginx/images/nginx/rootfs/Dockerfile
+ sed -i 's/writeDirs=/set -x;writeDirs=/g' /home/evatsiv/gitViews/mxe-core/3pp-images/nginx-controller/ingress-nginx/images/nginx/rootfs/Dockerfile
+ cd /home/evatsiv/gitViews/mxe-core/3pp-images/nginx-controller/ingress-nginx/images/nginx
+ make PLATFORMS=linux/amd64 OUTPUT=--load TAG=controller-v1.8.1 REGISTRY=armdocker.rnd.ericsson.se/proj-mxe-ci-internal/k8s.gcr.io build
Setting /usr/bin/qemu-alpha-static as binfmt interpreter for alpha
Setting /usr/bin/qemu-arm-static as binfmt interpreter for arm
Setting /usr/bin/qemu-armeb-static as binfmt interpreter for armeb
Setting /usr/bin/qemu-sparc-static as binfmt interpreter for sparc
Setting /usr/bin/qemu-sparc32plus-static as binfmt interpreter for sparc32plus
Setting /usr/bin/qemu-sparc64-static as binfmt interpreter for sparc64
Setting /usr/bin/qemu-ppc-static as binfmt interpreter for ppc
Setting /usr/bin/qemu-ppc64-static as binfmt interpreter for ppc64
Setting /usr/bin/qemu-ppc64le-static as binfmt interpreter for ppc64le
Setting /usr/bin/qemu-m68k-static as binfmt interpreter for m68k
Setting /usr/bin/qemu-mips-static as binfmt interpreter for mips
Setting /usr/bin/qemu-mipsel-static as binfmt interpreter for mipsel
Setting /usr/bin/qemu-mipsn32-static as binfmt interpreter for mipsn32
Setting /usr/bin/qemu-mipsn32el-static as binfmt interpreter for mipsn32el
Setting /usr/bin/qemu-mips64-static as binfmt interpreter for mips64
Setting /usr/bin/qemu-mips64el-static as binfmt interpreter for mips64el
Setting /usr/bin/qemu-sh4-static as binfmt interpreter for sh4
Setting /usr/bin/qemu-sh4eb-static as binfmt interpreter for sh4eb
Setting /usr/bin/qemu-s390x-static as binfmt interpreter for s390x
Setting /usr/bin/qemu-aarch64-static as binfmt interpreter for aarch64
Setting /usr/bin/qemu-aarch64_be-static as binfmt interpreter for aarch64_be
Setting /usr/bin/qemu-hppa-static as binfmt interpreter for hppa
Setting /usr/bin/qemu-riscv32-static as binfmt interpreter for riscv32
Setting /usr/bin/qemu-riscv64-static as binfmt interpreter for riscv64
Setting /usr/bin/qemu-xtensa-static as binfmt interpreter for xtensa
Setting /usr/bin/qemu-xtensaeb-static as binfmt interpreter for xtensaeb
Setting /usr/bin/qemu-microblaze-static as binfmt interpreter for microblaze
Setting /usr/bin/qemu-microblazeel-static as binfmt interpreter for microblazeel
Setting /usr/bin/qemu-or1k-static as binfmt interpreter for or1k
Setting /usr/bin/qemu-hexagon-static as binfmt interpreter for hexagon
ingress-nginx removed
ingress-nginx
done
docker buildx build \
	--platform=linux/amd64 --load \
	--progress=plain \
	--pull \
	--tag armdocker.rnd.ericsson.se/proj-mxe-ci-internal/k8s.gcr.io/nginx:controller-v1.8.1 rootfs
#0 building with "ingress-nginx" instance using docker-container driver

#1 [internal] booting buildkit
#1 pulling image moby/buildkit:buildx-stable-1
#1 pulling image moby/buildkit:buildx-stable-1 49.8s done
#1 creating container buildx_buildkit_ingress-nginx0
#1 creating container buildx_buildkit_ingress-nginx0 1.2s done
#1 DONE 51.1s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.97kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/alpine:3.18.0
#3 DONE 17.5s

#4 [internal] load .dockerignore
#4 transferring context: 2B done
#4 DONE 0.0s

#5 [stage-1 1/5] FROM docker.io/library/alpine:3.18.0@sha256:02bb6f428431fbc2809c5d1b41eab5a68350194fb508869a33cb1af4444c9b11
#5 resolve docker.io/library/alpine:3.18.0@sha256:02bb6f428431fbc2809c5d1b41eab5a68350194fb508869a33cb1af4444c9b11 0.0s done
#5 DONE 0.0s

#6 [internal] load build context
#6 transferring context: 26.50MB 0.2s done
#6 DONE 0.2s

#7 [builder 3/3] RUN apk update   && apk upgrade   && apk add -U bash --no-cache   && /build.sh
#7 CACHED

#8 [stage-1 2/5] COPY --from=builder /usr/local /usr/local
#8 CACHED

#9 [stage-1 3/5] COPY --from=builder /opt /opt
#9 CACHED

#10 [stage-1 4/5] COPY --from=builder /etc/nginx /etc/nginx
#10 CACHED

#11 [builder 2/3] COPY . /
#11 CACHED

#12 [stage-1 5/5] RUN apk update   && apk upgrade   && apk add -U --no-cache   bash   openssl   pcre   zlib   geoip   curl   ca-certificates   patch   yajl   lmdb   libxml2   libmaxminddb   yaml-cpp   dumb-init   tzdata   && ln -s /usr/local/nginx/sbin/nginx /sbin/nginx   && adduser -S -D -H -u 101 -h /usr/local/nginx   -s /sbin/nologin -G www-data -g www-data www-data   && bash -eu -c '   set -x;writeDirs=(   /var/log/nginx   /var/lib/nginx/body   /var/lib/nginx/fastcgi   /var/lib/nginx/proxy   /var/lib/nginx/scgi   /var/lib/nginx/uwsgi   /var/log/audit   );   for dir in "${writeDirs[@]}"; do   mkdir -p ${dir};   chown -R www-data.www-data ${dir};   done'
#12 CACHED

#13 exporting to docker image format
#13 exporting layers done
#13 exporting manifest sha256:f2741d426f87bbdc1e5b613e2095d2773104676353e3a58bbec8c94928532fc6 done
#13 exporting config sha256:dee1c820b9ad8efa3dc562b0def9da20ae168a45ada981b9448cd9251ef97a37 done
#13 sending tarball
#13 sending tarball 0.3s done
#13 DONE 0.4s

#14 importing to docker
#14 DONE 0.0s
+ buildStatus=0
+ [[ 0 -ne 0 ]]
+ docker push armdocker.rnd.ericsson.se/proj-mxe-ci-internal/k8s.gcr.io/nginx:controller-v1.8.1
The push refers to repository [armdocker.rnd.ericsson.se/proj-mxe-ci-internal/k8s.gcr.io/nginx]
e225ad7dbe05: Preparing
ef63e981efa7: Preparing
2a6def3e360c: Preparing
7f089d1cc934: Preparing
bb01bd7e32b5: Preparing
e225ad7dbe05: Layer already exists
2a6def3e360c: Layer already exists
ef63e981efa7: Layer already exists
7f089d1cc934: Layer already exists
bb01bd7e32b5: Layer already exists
controller-v1.8.1: digest: sha256:49b20bc6527bf229f4de113cbb0827342c26b32bac9f7f9a104cea537f8a7c26 size: 1371
+ cd /home/evatsiv/gitViews/mxe-core/3pp-images/nginx-controller/ingress-nginx/
+ make 'SHELL=sh -x' build
+ which go
+ go env GOARCH
+ which go
+ go env GOARCH
+ git rev-parse --short HEAD
+ git config --get remote.origin.url
+ cat TAG
+ git config --get remote.origin.url
+ git rev-parse --short HEAD
+ cat TAG
+ which go
+ go env GOARCH
+ which go
+ go env GOARCH
+ which go
+ go env GOARCH
+ build/run-in-docker.sh MAC_OS= PKG=k8s.io/ingress-nginx ARCH=amd64 COMMIT_SHA=git-ab99e23bb REPO_INFO=https://github.com/kubernetes/ingress-nginx.git TAG=v1.8.1 build/build.sh
Reached DIND check ELSE block, inside run-in-docker.sh
Building targets for amd64, generated targets in rootfs/bin/amd64 directory.
Building k8s.io/ingress-nginx/cmd/nginx
go: downloading k8s.io/apimachinery v0.26.4
go: downloading github.com/prometheus/client_golang v1.16.0
go: downloading gopkg.in/mcuadros/go-syslog.v2 v2.3.0
go: downloading k8s.io/client-go v0.26.4
go: downloading k8s.io/klog/v2 v2.100.1
go: downloading github.com/beorn7/perks v1.0.1
go: downloading github.com/cespare/xxhash/v2 v2.2.0
go: downloading github.com/prometheus/client_model v0.4.0
go: downloading github.com/prometheus/common v0.44.0
go: downloading github.com/prometheus/procfs v0.10.1
go: downloading google.golang.org/protobuf v1.30.0
go: downloading k8s.io/utils v0.0.0-20221128185143-99ec85e7a448
go: downloading github.com/gogo/protobuf v1.3.2
go: downloading github.com/google/gofuzz v1.1.0
go: downloading k8s.io/api v0.26.4
go: downloading github.com/zakjan/cert-chain-resolver v0.0.0-20211122211144-c6b0b792af9a
go: downloading github.com/mitchellh/go-ps v1.0.0
go: downloading github.com/spf13/pflag v1.0.5
go: downloading k8s.io/apiserver v0.26.4
go: downloading github.com/armon/go-proxyproto v0.0.0-20210323213023-7e956b284f0a
go: downloading github.com/eapache/channels v1.1.0
go: downloading github.com/mitchellh/hashstructure/v2 v2.0.2
go: downloading github.com/ncabatoff/process-exporter v0.7.10
go: downloading github.com/fsnotify/fsnotify v1.6.0
go: downloading github.com/go-logr/logr v1.2.4
go: downloading github.com/matttproud/golang_protobuf_extensions v1.0.4
go: downloading golang.org/x/net v0.10.0
go: downloading sigs.k8s.io/structured-merge-diff/v4 v4.2.3
go: downloading github.com/imdario/mergo v0.3.16
go: downloading golang.org/x/term v0.9.0
go: downloading gopkg.in/inf.v0 v0.9.1
go: downloading github.com/json-iterator/go v1.1.12
go: downloading github.com/fullsailor/pkcs7 v0.0.0-20160414161337-2585af45975b
go: downloading gopkg.in/go-playground/pool.v3 v3.1.1
go: downloading github.com/eapache/queue v1.1.0
go: downloading golang.org/x/sys v0.9.0
go: downloading github.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da
go: downloading golang.org/x/time v0.3.0
go: downloading github.com/mitchellh/mapstructure v1.5.0
go: downloading pault.ag/go/sniff v0.0.0-20200207005214-cf7e4d167732
go: downloading github.com/ncabatoff/go-seq v0.0.0-20180805175032-b08ef85ed833
go: downloading github.com/golang/protobuf v1.5.3
go: downloading github.com/google/gnostic v0.5.7-v3refs
go: downloading github.com/davecgh/go-spew v1.1.1
go: downloading sigs.k8s.io/json v0.0.0-20220713155537-f223a00ba0e2
go: downloading golang.org/x/oauth2 v0.8.0
go: downloading gopkg.in/yaml.v2 v2.4.0
go: downloading github.com/google/go-cmp v0.5.9
go: downloading github.com/opencontainers/runc v1.1.7
go: downloading k8s.io/kube-openapi v0.0.0-20221012153701-172d655c2280
go: downloading sigs.k8s.io/yaml v1.3.0
go: downloading k8s.io/component-base v0.26.4
go: downloading github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd
go: downloading github.com/modern-go/reflect2 v1.0.2
go: downloading github.com/emicklei/go-restful/v3 v3.10.2
go: downloading gopkg.in/yaml.v3 v3.0.1
go: downloading golang.org/x/text v0.10.0
go: downloading github.com/google/uuid v1.3.0
go: downloading github.com/blang/semver/v4 v4.0.0
go: downloading github.com/cyphar/filepath-securejoin v0.2.3
go: downloading github.com/moby/sys/mountinfo v0.5.0
go: downloading github.com/sirupsen/logrus v1.8.1
go: downloading github.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822
go: downloading github.com/coreos/go-systemd/v22 v22.3.2
go: downloading github.com/opencontainers/runtime-spec v1.0.3-0.20210326190908-1c3f411f0417
go: downloading github.com/go-openapi/swag v0.19.14
go: downloading github.com/go-openapi/jsonreference v0.20.0
go: downloading github.com/godbus/dbus/v5 v5.0.6
go: downloading github.com/go-openapi/jsonpointer v0.19.5
go: downloading github.com/mailru/easyjson v0.7.6
go: downloading github.com/josharian/intern v1.0.0
Building k8s.io/ingress-nginx/cmd/dbg
go: downloading github.com/spf13/cobra v1.7.0
Building k8s.io/ingress-nginx/cmd/waitshutdown
+ make 'SHELL=sh -x' BASE_IMAGE=armdocker.rnd.ericsson.se/proj-mxe-ci-internal/k8s.gcr.io/nginx:controller-v1.8.1 REGISTRY=armdocker.rnd.ericsson.se/proj-mxe/k8s.gcr.io/ingress-nginx VERSION=controller-v1.8.1 BUILD_ID=mxe2.8 image
+ which go
+ go env GOARCH
+ cat TAG
+ cat TAG
+ git config --get remote.origin.url
+ git rev-parse --short HEAD
+ cat TAG
+ which go
+ go env GOARCH
+ which go
+ go env GOARCH
+ which go
+ go env GOARCH
+ echo removing old image armdocker.rnd.ericsson.se/proj-mxe/k8s.gcr.io/ingress-nginx/controller:v1.8.1
removing old image armdocker.rnd.ericsson.se/proj-mxe/k8s.gcr.io/ingress-nginx/controller:v1.8.1
+ docker rmi -f armdocker.rnd.ericsson.se/proj-mxe/k8s.gcr.io/ingress-nginx/controller:v1.8.1
Untagged: armdocker.rnd.ericsson.se/proj-mxe/k8s.gcr.io/ingress-nginx/controller:v1.8.1
+ which go
+ go env GOARCH
+ cat TAG
+ which go
+ go env GOARCH
+ git rev-parse --short HEAD
+ cat TAG
+ git config --get remote.origin.url
+ git rev-parse --short HEAD
+ cat TAG
+ which go
+ go env GOARCH
+ which go
+ go env GOARCH
+ which go
+ go env GOARCH
+ echo Building docker image (amd64)...
Building docker image (amd64)...
+ docker build --no-cache --pull --build-arg BASE_IMAGE=armdocker.rnd.ericsson.se/proj-mxe-ci-internal/k8s.gcr.io/nginx:controller-v1.8.1 --build-arg VERSION=v1.8.1 --build-arg TARGETARCH=amd64 --build-arg COMMIT_SHA=git-ab99e23bb --build-arg BUILD_ID=mxe2.8 -t armdocker.rnd.ericsson.se/proj-mxe/k8s.gcr.io/ingress-nginx/controller:v1.8.1 rootfs
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 3.15kB done
#1 DONE 0.0s

#2 [internal] load metadata for armdocker.rnd.ericsson.se/proj-mxe-ci-internal/k8s.gcr.io/nginx:controller-v1.8.1
#2 ...

#3 [auth] proj-mxe-ci-internal/k8s.gcr.io/nginx:pull token for armdocker.rnd.ericsson.se
#3 DONE 0.0s

#2 [internal] load metadata for armdocker.rnd.ericsson.se/proj-mxe-ci-internal/k8s.gcr.io/nginx:controller-v1.8.1
#2 DONE 23.8s

#4 [internal] load .dockerignore
#4 transferring context: 65B done
#4 DONE 0.0s

#5 [ 1/10] FROM armdocker.rnd.ericsson.se/proj-mxe-ci-internal/k8s.gcr.io/nginx:controller-v1.8.1@sha256:49b20bc6527bf229f4de113cbb0827342c26b32bac9f7f9a104cea537f8a7c26
#5 DONE 0.0s

#6 [ 2/10] WORKDIR  /etc/nginx
#6 CACHED

#7 [internal] load build context
#7 transferring context: 52.02MB 0.1s done
#7 DONE 0.2s

#8 [ 3/10] RUN apk update   && apk upgrade   && apk add --no-cache     diffutils   && rm -rf /var/cache/apk/*
#8 0.337 fetch https://dl-cdn.alpinelinux.org/alpine/v3.18/main/x86_64/APKINDEX.tar.gz
#8 1.090 fetch https://dl-cdn.alpinelinux.org/alpine/v3.18/community/x86_64/APKINDEX.tar.gz
#8 1.449 v3.18.6-186-g74bd545b638 [https://dl-cdn.alpinelinux.org/alpine/v3.18/main]
#8 1.449 v3.18.6-187-ga59344493b8 [https://dl-cdn.alpinelinux.org/alpine/v3.18/community]
#8 1.449 OK: 20070 distinct packages available
#8 1.657 OK: 23 MiB in 41 packages
#8 1.704 fetch https://dl-cdn.alpinelinux.org/alpine/v3.18/main/x86_64/APKINDEX.tar.gz
#8 1.810 fetch https://dl-cdn.alpinelinux.org/alpine/v3.18/community/x86_64/APKINDEX.tar.gz
#8 2.003 (1/1) Installing diffutils (3.9-r2)
#8 2.018 Executing busybox-1.36.1-r5.trigger
#8 2.022 OK: 23 MiB in 42 packages
#8 DONE 2.3s

#9 [ 4/10] COPY --chown=www-data:www-data etc /etc
#9 DONE 0.1s

#10 [ 5/10] COPY --chown=www-data:www-data bin/amd64/dbg /
#10 DONE 0.1s

#11 [ 6/10] COPY --chown=www-data:www-data bin/amd64/nginx-ingress-controller /
#11 DONE 0.2s

#12 [ 7/10] COPY --chown=www-data:www-data bin/amd64/wait-shutdown /
#12 DONE 0.1s

#13 [ 8/10] RUN bash -xeu -c '   writeDirs=(     /etc/ingress-controller     /etc/ingress-controller/ssl     /etc/ingress-controller/auth     /var/log     /var/log/nginx     /tmp/nginx   );   for dir in "${writeDirs[@]}"; do     mkdir -p ${dir};     chown -R www-data.www-data ${dir};   done'   && echo "/lib:/usr/lib:/usr/local/lib:/modules_mount/etc/nginx/modules/otel" > /etc/ld-musl-x86_64.path
#13 0.325 + writeDirs=(/etc/ingress-controller /etc/ingress-controller/ssl /etc/ingress-controller/auth /var/log /var/log/nginx /tmp/nginx)
#13 0.325 + for dir in "${writeDirs[@]}"
#13 0.325 + mkdir -p /etc/ingress-controller
#13 0.326 + chown -R www-data.www-data /etc/ingress-controller
#13 0.327 + for dir in "${writeDirs[@]}"
#13 0.327 + mkdir -p /etc/ingress-controller/ssl
#13 0.327 + chown -R www-data.www-data /etc/ingress-controller/ssl
#13 0.328 + for dir in "${writeDirs[@]}"
#13 0.328 + mkdir -p /etc/ingress-controller/auth
#13 0.328 + chown -R www-data.www-data /etc/ingress-controller/auth
#13 0.328 + for dir in "${writeDirs[@]}"
#13 0.328 + mkdir -p /var/log
#13 0.329 + chown -R www-data.www-data /var/log
#13 0.330 + for dir in "${writeDirs[@]}"
#13 0.330 + mkdir -p /var/log/nginx
#13 0.331 + chown -R www-data.www-data /var/log/nginx
#13 0.331 + for dir in "${writeDirs[@]}"
#13 0.331 + mkdir -p /tmp/nginx
#13 0.332 + chown -R www-data.www-data /tmp/nginx
#13 DONE 0.4s

#14 [ 9/10] RUN apk add --no-cache libcap   && setcap    cap_net_bind_service=+ep /nginx-ingress-controller   && setcap -v cap_net_bind_service=+ep /nginx-ingress-controller   && setcap    cap_net_bind_service=+ep /usr/local/nginx/sbin/nginx   && setcap -v cap_net_bind_service=+ep /usr/local/nginx/sbin/nginx   && setcap    cap_net_bind_service=+ep /usr/bin/dumb-init   && setcap -v cap_net_bind_service=+ep /usr/bin/dumb-init   && apk del libcap   && ln -sf /usr/local/nginx/sbin/nginx /usr/bin/nginx
#14 0.423 fetch https://dl-cdn.alpinelinux.org/alpine/v3.18/main/x86_64/APKINDEX.tar.gz
#14 0.530 fetch https://dl-cdn.alpinelinux.org/alpine/v3.18/community/x86_64/APKINDEX.tar.gz
#14 0.708 (1/3) Installing libcap2 (2.69-r0)
#14 0.717 (2/3) Installing libcap-utils (2.69-r0)
#14 0.727 (3/3) Installing libcap (2.69-r0)
#14 0.735 Executing busybox-1.36.1-r5.trigger
#14 0.740 OK: 23 MiB in 45 packages
#14 0.947 /nginx-ingress-controller: OK
#14 0.995 /usr/local/nginx/sbin/nginx: OK
#14 1.003 /usr/bin/dumb-init: OK
#14 1.007 WARNING: opening from cache https://dl-cdn.alpinelinux.org/alpine/v3.18/main: No such file or directory
#14 1.007 WARNING: opening from cache https://dl-cdn.alpinelinux.org/alpine/v3.18/community: No such file or directory
#14 1.007 (1/3) Purging libcap (2.69-r0)
#14 1.007 (2/3) Purging libcap-utils (2.69-r0)
#14 1.007 (3/3) Purging libcap2 (2.69-r0)
#14 1.007 Executing busybox-1.36.1-r5.trigger
#14 1.010 OK: 23 MiB in 42 packages
#14 DONE 1.0s

#15 [10/10] RUN  ln -sf /dev/stdout /var/log/nginx/access.log   && ln -sf /dev/stderr /var/log/nginx/error.log
#15 DONE 0.4s

#16 exporting to image
#16 exporting layers
#16 exporting layers 0.3s done
#16 writing image sha256:da8dfc2ac7bd79740911fb3c79bbc7ba8ee3452fb55637d3bb411fe1215e6ca0 done
#16 naming to armdocker.rnd.ericsson.se/proj-mxe/k8s.gcr.io/ingress-nginx/controller:v1.8.1 0.0s done
#16 DONE 0.3s
+ buildStatus=0
+ [[ 0 -ne 0 ]]
++ echo controller-v1.8.1
++ sed s/-/:/g
+ CONTROLLER_IMAGE=controller:v1.8.1
+ docker tag armdocker.rnd.ericsson.se/proj-mxe/k8s.gcr.io/ingress-nginx/controller:v1.8.1 armdocker.rnd.ericsson.se/proj-mxe/k8s.gcr.io/ingress-nginx/controller:v1.8.1-3.19.1
+ docker push armdocker.rnd.ericsson.se/proj-mxe/k8s.gcr.io/ingress-nginx/controller:v1.8.1-3.19.1
The push refers to repository [armdocker.rnd.ericsson.se/proj-mxe/k8s.gcr.io/ingress-nginx/controller]
44da8c2835a6: Preparing
8960a3e9b0d9: Preparing
83713b8f96bf: Preparing
a9d56dc23d4e: Preparing
02831c8d238a: Preparing
c9ceb769f101: Preparing
5d712eb59933: Preparing
f927e71d4dce: Preparing
5f70bf18a086: Preparing
e225ad7dbe05: Preparing
ef63e981efa7: Preparing
2a6def3e360c: Preparing
7f089d1cc934: Preparing
bb01bd7e32b5: Preparing
f927e71d4dce: Waiting
2a6def3e360c: Waiting
7f089d1cc934: Waiting
bb01bd7e32b5: Waiting
5f70bf18a086: Waiting
e225ad7dbe05: Waiting
ef63e981efa7: Waiting
c9ceb769f101: Waiting
5d712eb59933: Waiting
a9d56dc23d4e: Pushed
44da8c2835a6: Pushed
8960a3e9b0d9: Pushed
83713b8f96bf: Pushed
02831c8d238a: Pushed
5f70bf18a086: Layer already exists
e225ad7dbe05: Layer already exists
2a6def3e360c: Layer already exists
ef63e981efa7: Layer already exists
bb01bd7e32b5: Layer already exists
7f089d1cc934: Layer already exists
c9ceb769f101: Pushed
5d712eb59933: Pushed
f927e71d4dce: Pushed
v1.8.1-3.19.1: digest: sha256:de0f6af02037da26c0cdb24d5eb52eac740a5182598b925305a99f2eedd8e25e size: 3256
+ pushed=0
+ [[ 0 == 0 ]]
+ cleanup
+ [[ -d /home/evatsiv/gitViews/mxe-core/3pp-images/nginx-controller/ingress-nginx ]]
+ [[ -d /home/evatsiv/gitViews/mxe-core/3pp-images/nginx-controller/ingress-nginx/.modcache/ ]]
+ chmod -R 777 /home/evatsiv/gitViews/mxe-core/3pp-images/nginx-controller/ingress-nginx/.modcache/
+ rm -rf /home/evatsiv/gitViews/mxe-core/3pp-images/nginx-controller/ingress-nginx
